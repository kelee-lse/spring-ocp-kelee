apiVersion: v1
items:
- apiVersion: image.openshift.io/v1
  kind: ImageStream
  metadata:
    annotations:
      openshift.io/generated-by: OpenShiftNewApp
    creationTimestamp: null
    labels:
      app: demoapp
      app.kubernetes.io/component: demoapp
      app.kubernetes.io/instance: demoapp
    name: gradlebuilder
  spec:
    lookupPolicy:
      local: false
    tags:
    - annotations:
        openshift.io/imported-from: quay.io/uvelyster/gradlebuilder
      from:
        kind: DockerImage
        name: quay.io/uvelyster/gradlebuilder
      generation: null
      importPolicy: {}
      name: latest
      referencePolicy:
        type: ""
  status:
    dockerImageRepository: ""
- apiVersion: image.openshift.io/v1
  kind: ImageStream
  metadata:
    annotations:
      openshift.io/generated-by: OpenShiftNewApp
    creationTimestamp: null
    labels:
      app: demoapp
      app.kubernetes.io/component: demoapp
      app.kubernetes.io/instance: demoapp
    name: demoapp
  spec:
    lookupPolicy:
      local: false
  status:
    dockerImageRepository: ""
- apiVersion: build.openshift.io/v1
  kind: BuildConfig
  metadata:
    annotations:
      openshift.io/generated-by: OpenShiftNewApp
    creationTimestamp: null
    labels:
      app: demoapp
      app.kubernetes.io/component: demoapp
      app.kubernetes.io/instance: demoapp
    name: demoapp
  spec:
    nodeSelector: null
    output:
      to:
        kind: ImageStreamTag
        name: demoapp:latest
    postCommit: {}
    resources: {}
    source:
      git:
        uri: https://github.com/uvelyster/spring-ocp.git
      type: Git
    strategy:
      sourceStrategy:
        from:
          kind: ImageStreamTag
          name: gradlebuilder:latest
      type: Source
    triggers:
    - github:
        secret: V4irz38IklX6322zF1MK
      type: GitHub
    - generic:
        secret: YYw26xh3a7iGZbDtds9i
      type: Generic
    - type: ConfigChange
    - imageChange: {}
      type: ImageChange
  status:
    lastVersion: 0
- apiVersion: apps.openshift.io/v1
  kind: DeploymentConfig
  metadata:
    annotations:
      openshift.io/generated-by: OpenShiftNewApp
    creationTimestamp: null
    labels:
      app: demoapp
      app.kubernetes.io/component: demoapp
      app.kubernetes.io/instance: demoapp
    name: demoapp
  spec:
    replicas: 1
    selector:
      deploymentconfig: demoapp
    strategy:
      resources: {}
    template:
      metadata:
        annotations:
          openshift.io/generated-by: OpenShiftNewApp
        creationTimestamp: null
        labels:
          deploymentconfig: demoapp
      spec:
        containers:
        - image: demoapp:latest
          name: demoapp
          ports:
          - containerPort: 8080
            protocol: TCP
          resources: {}
          env:
          - name: JAVA_PARAMS
            value: -Dspring.profiles.active=prod
          - name: MYSQL_USER
            valueFrom:
              secretKeyRef:
                key: database-user
                name: mysql
          - name: MYSQL_PASSWORD
            valueFrom:
              secretKeyRef:
                key: database-password
                name: mysql
          - name: MYSQL_ROOT_PASSWORD
            valueFrom:
              secretKeyRef:
                key: database-root-password
                name: mysql
          - name: MYSQL_DATABASE
            valueFrom:
              secretKeyRef:
                key: database-name
                name: mysql
    test: false
    triggers:
    - type: ConfigChange
    - imageChangeParams:
        automatic: true
        containerNames:
        - demoapp
        from:
          kind: ImageStreamTag
          name: demoapp:latest
      type: ImageChange
  status:
    availableReplicas: 0
    latestVersion: 0
    observedGeneration: 0
    replicas: 0
    unavailableReplicas: 0
    updatedReplicas: 0
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      openshift.io/generated-by: OpenShiftNewApp
    creationTimestamp: null
    labels:
      app: demoapp
      app.kubernetes.io/component: demoapp
      app.kubernetes.io/instance: demoapp
    name: demoapp
  spec:
    ports:
    - name: 8080-tcp
      port: 8080
      protocol: TCP
      targetPort: 8080
    selector:
      deploymentconfig: demoapp
  status:
    loadBalancer: {}
kind: List
metadata: {}
